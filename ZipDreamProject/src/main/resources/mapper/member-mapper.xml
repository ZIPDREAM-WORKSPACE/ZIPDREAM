<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member-mapper">
	
	<resultMap type="member" id="memberResultSet">
		<id column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="PHONE" property="phone"/>
		<result column="ADDRESS" property="address"/>
		<result column="ADDR2" property="addr2"/>
		<result column="ADDR3" property="addr3"/>
		<result column="OFFICE" property="office"/>
		<result column="ENROLL_DATETIME" property="enrollDateTime" />
		<result column="MODIFY_DATETIME" property="modifyDateTime" />
		<result column="WITHDRAW" property="withdraw" />
		<result column="STATUS" property="status" />
		<result column="USER_LEVEL" property="userLevel" />
	</resultMap>
	
	<resultMap type="mailAuth" id="emailResultSet">
		<id column="MAIL" property="mail" />
		<result column="AUTH_KEY" property="authKey" />
		<result column="IS_AUTH" property="isAuth" />
	</resultMap>
	

	<resultMap type="attachment" id="attachmentResultSet">
		<id column="ATTACHMENT_NO" property="attachmentNo" />
		<result column="REF_UNO" property="refUno" />
		<result column="REF_SNO" property="refSno" />
		<result column="ORIGIN_NAME" property="originName" />
		<result column="CHANGE_NAME" property="changeName" />
		<result column="FILE_PATH" property="filePath" />
		<result column="FILE_LEVEL" property="fileLevel" />
	</resultMap>	


	
	<resultMap type="userselectlist" id="bookmarkResultSet">
		<result column="USER_NO" property="userNo" />
		<result column="SELL_NO" property="sellNo" />
	</resultMap>
	
	
	<select id="loginMember" parameterType="member"
		resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE USER_ID = #{userId} AND STATUS = 'Y' AND WITHDRAW = 'Y'
	</select>
	
	<!-- 일반회원 회원가입 -->
	 <insert id="insertMember" parameterType="member" useGeneratedKeys="true" keyProperty="userNo">
		INSERT INTO
		MEMBER(

			  USER_ID
			, USER_PWD
			, USER_NAME
			, PHONE
			, ADDRESS
			, ENROLL_DATETIME
			, MODIFY_DATETIME
			, WITHDRAW
			, USER_LEVEL
			)
		VALUES(
			 #{userId}
			, #{userPwd}
			, #{userName}
			, #{phone}
			, #{address}
			, SYSDATE()
			, SYSDATE()
			, 'Y'
			, 1)
	</insert>  
	
	<!-- 중개사 회원가입 -->
	<insert id="insertbkMember" parameterType="member"  useGeneratedKeys="true" keyProperty="userNo">
		INSERT INTO
		MEMBER(
			  USER_ID
			, USER_PWD
			, USER_NAME
			, PHONE
			, ADDRESS
			, ENROLL_DATETIME
			, MODIFY_DATETIME
			, WITHDRAW
			, OFFICE
			, USER_LEVEL
			)
		VALUES(
			 #{userId}
			, #{userPwd}
			, #{userName}
			, #{phone}
			, #{address}
			, SYSDATE()
			, SYSDATE()
			, 'N'
			, #{office}
			, 2)
	</insert>
	
	<!-- 이미지 파일 -->
	<insert id="bkInsertImg" parameterType="list" useGeneratedKeys="true" keyProperty="attachmentNo">
		INSERT INTO ATTACHMENT (REF_UNO, ORIGIN_FILE, CHANGE_NAME, FILE_PATH, FILE_LEVEL)
		SELECT C.*
		FROM   (<foreach collection="list" item="at" separator="UNION ALL">
					SELECT #{at.refUno}, #{at.originFile}, #{at.changeName}, #{at.filePath}, #{at.fileLevel}
			   </foreach>) AS C
	</insert>
	
	<select id="selectMember" parameterType="_int" resultMap="memberResultSet">
		SELECT * FROM MEMBER WHERE USER_NO = #{userNo}
	</select>
	
	 <!-- 아이디 찾기 -->
	<select id="emailCheck" resultType="int">
      SELECT count(USER_ID)
      FROM MEMBER
      WHERE USER_ID=#{id}
   </select>  
	
	<!-- 이메일 -->
	<insert id="insertMailAuth" parameterType="mailAuth">
    INSERT INTO mail_auth (mail,auth_key,is_auth)
    values (#{mail},#{authKey},0)
	</insert>
	
	<select id="getMailAuth" resultMap="emailResultSet">
	    SELECT mail, auth_key, is_auth
	    FROM mail_auth
	    WHERE mail=#{mail}   
	</select>
	
	<update id="updateMailAuth" parameterType="mailAuth">
	    UPDATE mail_auth 
	    SET auth_key=#{authKey}
	    ,is_auth=0
	    WHERE mail=#{mail}
	</update>
	
	<update id="completeAuth" parameterType="mailAuth">
	    UPDATE mail_auth SET is_auth=1
	    WHERE mail=#{mail}
	</update>
	
	<select id="searchId" resultMap="memberResultSet">
	    SELECT USER_ID
	    FROM MEMBER
	    WHERE USER_NAME = #{name} AND PHONE = #{phone}   
	</select>

	
	<!-- 비밀번호 찾기 -->
	<update id="searchPwd" parameterType="member">
      UPDATE MEMBER SET 
			USER_PWD = #{userPwd}
      WHERE USER_ID = #{userId} AND PHONE = #{phone} 
   </update> 

   <!-- 일반회원 수정 -->
   <update id="updateMember" parameterType="HashMap">
	    UPDATE MEMBER SET 
			  
			  USER_NAME = #{userName}
			, PHONE = #{phone}
			, ADDRESS = #{address}
	    WHERE USER_NO = #{userNo} 
	</update>
	
	<update id="updateMemberPwd" parameterType="member">
	    UPDATE MEMBER SET 	 
			USER_PWD = #{userPwd}		
	    WHERE USER_NO = #{userNo} 
	</update>
	
	
	<update id="deleteMember">
		UPDATE MEMBER
		SET STATUS='N', WITHDRAW='N'
		WHERE USER_NO =#{userNo}
	</update>
	
	<update id="updatebkImages" parameterType="Attachment">
		UPDATE ATTACHMENT SET
		ORIGIN_FILE = #{originFile},
		CHANGE_NAME = #{changeName}
		WHERE REF_UNO = #{refUno} AND FILE_LEVEL = #{fileLevel}
	</update>
	
	<select id="selectAttachmentList" parameterType="_int" resultMap="attachmentResultSet">
	    SELECT *
	    FROM ATTACHMENT
	    WHERE REF_UNO = #{userNo}   
	</select>

	<select id="myBookmarkList" resultMap="bookmarkResultSet">
		SELECT SELL_NO
		FROM USERSELECT_LIST
		WHERE USER_NO = #{uno}
		ORDER BY SELL_NO
	</select>
	
	<select id="loginCheckMember" parameterType="HashMap" resultMap="memberResultSet">
	SELECT M.*
	FROM (SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, M.*
	FROM MEMBER M , (SELECT @ROWNUM := 0) TMP
	ORDER BY ENROLL_DATETIME ASC) M	
	WHERE USER_ID = #{userId} AND ROWNUM = #{rowNum}
	
	</select>
</mapper>
